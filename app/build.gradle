apply plugin: 'com.android.application'


ext.minSdkVersion = 21
ext.majorVersion = 1
ext.minorVersion = 0
ext.patchVersion = 0
ext.versionClassifier = null


android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.fransunisoft.coronavirus"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode generateVersionCode()
        versionName generateVersionName()
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }


    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            jniDebuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            android.applicationVariants.all {
                variant ->
                    variant.outputs.all {
                        outputFileName = "Coronavirus_App_v${defaultConfig.versionName}_${releaseDate()}_${releaseTime()}.apk"
                    }
            }

        }
        debug {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.config
        }
    }


    dependencies {

        implementation fileTree(dir: 'libs', include: ['*.jar'])

        testImplementation 'junit:junit:4.12'
        androidTestImplementation 'com.android.support.test:runner:1.0.2'
        androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

        // google support library ---------------------------------------------------------------------
        implementation 'com.android.support:appcompat-v7:28.0.0'
        implementation 'com.android.support:design:28.0.0'
        implementation 'com.android.support:cardview-v7:28.0.0'
        implementation 'com.android.support:recyclerview-v7:28.0.0'
        implementation 'com.android.support:support-v13:28.0.0'
        implementation 'com.android.support.constraint:constraint-layout:1.1.2'
        implementation 'com.android.support:support-vector-drawable:28.0.0'

//Image
        implementation 'com.github.bumptech.glide:glide:4.7.1'
        annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
        implementation 'de.hdodenhof:circleimageview:2.2.0'

//Network
        implementation 'com.squareup.retrofit2:retrofit:2.4.0'
        implementation 'com.squareup.retrofit2:converter-gson:2.2.0'

//Times Formater
        implementation 'org.ocpsoft.prettytime:prettytime:4.0.1.Final'

        // third party dependencies -------------------------------------------------------------------
        implementation 'com.balysv:material-ripple:1.0.2'                  // ripple effect
        implementation 'com.wdullaer:materialdatetimepicker:3.2.0'         // date & time picker
        implementation 'com.mikhaellopez:circularimageview:3.2.0'          // circle image view
        implementation 'com.hootsuite.android:nachos:1.1.1'                // material chips
        implementation 'com.google.android:flexbox:0.3.2'                  // google flexible box
        implementation 'com.crystal:crystalrangeseekbar:1.1.3'             // range seek bar
    }

    repositories {
        mavenCentral()
    }

}
static def releaseDate() {
    return new Date().format("ddMMyyyy")
}

static def releaseTime() {
    return new Date().format("HHmm")
}

private Integer generateVersionCode() {
    return ext.minSdkVersion * 10000000 + ext.majorVersion * 10000 +
            ext.minorVersion * 100 + ext.patchVersion
}
private String generateVersionName() {
    String versionName = "${ext.majorVersion}.${ext.minorVersion}.${ext.patchVersion}"
    if (ext.versionClassifier != null)
        versionName += "-${ext.versionClassifier}"
    return versionName
}
